#!/usr/bin/env -S mycmd myproject run
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

set -o nounset -o errexit -o errtrace -o pipefail

myproject.register_task_definition_file_description "URL Data Extractor is a Python Library for matching URLS and extracting data from URLs."

# --------------------------------------------------------------------------------------------------
# Project-Wide Variables

mycmd.trace "The following variables set by MyProject are used in the main task definition file:"
# shellcheck disable=SC2154
mycmd.trace "- MYPROJECT_ROOT_DIRECTORY:            ${MYPROJECT_ROOT_DIRECTORY}"
# shellcheck disable=SC2154
mycmd.trace "- MYPROJECT_TASK_DEFINITION_DIRECTORY: ${MYPROJECT_TASK_DEFINITION_DIRECTORY}"

readonly SRC_DIRECTORY="${MYPROJECT_ROOT_DIRECTORY}/src"

mycmd.trace "Set the following variables:"
mycmd.trace "- SRC_DIRECTORY: ${SRC_DIRECTORY}"

# --------------------------------------------------------------------------------------------------
# Project File Sets

# All Files
myproject.register_fileset ALL_FILES
myproject.find_and_add_files_to_fileset ALL_FILES "${MYPROJECT_TASK_DEFINITION_DIRECTORY}" -type f
myproject.find_and_add_files_to_fileset ALL_FILES "${SRC_DIRECTORY}" -type f -name '*.py'
myproject.add_files_to_fileset ALL_FILES LICENSE pyproject.toml uv.lock extractor-test.py README.md

# Task Definition Files
myproject.register_fileset TASK_DEFINITION_FILES
myproject.add_files_to_fileset TASK_DEFINITION_FILES "${MYPROJECT_TASK_DEFINITION_DIRECTORY}"/*

# Python Files Only
myproject.register_fileset PYTHON_FILES
myproject.find_and_add_files_to_fileset PYTHON_FILES "${SRC_DIRECTORY}" -type f -name '*.py'
myproject.add_files_to_fileset PYTHON_FILES extractor-test.py

# --------------------------------------------------------------------------------------------------
# Main Tasks
function lint_all() {
    myproject.execute_tasks task-definition-files lint \; python check-all
}

myproject.register_task lint-all lint_all
myproject.register_task_description lint-all "Lint all project files."

function format_all() {
    myproject.execute_tasks task-definition-files format \; python format
}

myproject.register_task format-all format_all
myproject.register_task_description format-all "Format all project files."

function all() {
    myproject.execute_tasks python install \; format-all \; lint-all
}

myproject.register_task all
myproject.register_task_description all "Execute all build tasks: install, format, and lint"

mycmd.trace "Finished loading the main task definition file."
